{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\InterviewCoachWeb\\\\src\\\\views\\\\QuestionScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport MainButton from \"../components/Button/Button\";\nimport Timer from \"../components/Timer/Timer\";\nimport CircularButton from \"../components/CircularButton/CircularButton\";\nimport RecButton from \"../components/RecButton/RecButton\";\nimport ScoreCard from \"../components/ScoreCard/ScoreCard\";\nimport { Transcribed } from \"../components/RecButton/RecButton\";\nimport \"./QuestionScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar prompt = `Eric is an interviewer asking questions to a interview candidate. Eric usually asks questions that build upon the last response that the candidate gave, but can also change the topic and ask a more general question. Questions should be short, well-phrased, and use key information from the candidates last response. \nProvide interview questions to the candidate.\nThe candidate is Grant.\nEric: What job title are you applying for?\nGrant: Software Engineer \nEric: What are your thoughts on the role of testing in software engineering? \nGrant: I think a comprehensive testing suite is an important part of any project. In my past internship at Amazon I wrote a suite of automated tests for their home assistant devices.\nEric: What framework did you use to create automated tests? Was it difficult to le arn?\nGrant: I used the Robot framework in Python. It wasn't too difficult to learn, since my mentor was able to guide me through it.\nEric: Great, can you tell me more about what you were writing the tests for?\nThe candidate is William.\nEric: What job title are you applying for?\nWilliam: Machine Learning Engineer \nEric: What is overfitting? How can you prevent it? \nWilliam: Overfitting is when your model finds spurious correlations in your training dataset that lead to poor generalization and poor accuracy in the testing dataset.\nEric: Name a time that you encountered overfitting and overcame it.\nWilliam: I recently had difficulty with overfitting when doing image classification. I was able to prevent it through strong regularization and data augmentation.\nEric: Why does data augmentation help with overfitting?\nWilliam: It can help the model rely on more general features which remain under some set of transformations, while spurious features are destroyed under certain transformations.\nEric: What is the difference between supervised and unsupervised learning?\nThe candidate is Malcolm.\nEric: What job title are you applying for?\nMalcolm:`;\nexport var TOPIC = \"\";\nexport var CURR_Q = \"\";\nfunction QuestionScreen(props) {\n  _s();\n  const {\n    title\n  } = props;\n  const first_question = \"What job title are you applying for?\";\n  const [question, setQuestion] = useState(first_question);\n  const [questions, setQuestions] = useState([first_question]);\n  const [timerstart, timerreset] = useState([1]);\n  const cohere = require(\"cohere-ai\");\n  cohere.init(\"jcDwCna5a0Lcq21ccTNNFe86J2LdYUx0AQQqJlBs\");\n  const initialText = \"Waiting for input...\";\n  const [buttonText, setButtonText] = useState(initialText);\n\n  // function handleClick() {\n  //   setButtonText(Transcribed.text);\n\n  //   setTimeout(() => {\n  //     setButtonText(initialText);\n  //   }, 5000); // 👈️ change text back after 1 second\n  // }\n\n  async function getNextQ(prompt) {\n    // const response_p = await cohere.generate('large', {\n    //     prompt: prompt,\n    //     max_tokens: 120,\n    //     temperature: 0.6,\n    //     p: 0.5,\n    //     stop_sequences: ['Malcolm:']\n    // })\n    const response = await cohere.generate({\n      model: \"command\",\n      prompt,\n      maxTokens: 300,\n      temperature: 0.9,\n      stopSequences: [],\n      returnLikelihoods: \"NONE\"\n    });\n    console.log(`Prediction: ${response.generations[0].text}`);\n    return response.generations[0].text;\n  }\n  const next_question = () => {\n    setButtonText(Transcribed.text);\n    //console.log(prompt, Transcribed)\n    //console.log(\"okay\")\n    prompt = prompt + Transcribed.text;\n    if (TOPIC == \"\") {\n      TOPIC = Transcribed.text;\n    }\n    prompt = prompt + \"\\n\";\n    prompt = prompt + \"Eric:\";\n    let question_p = getNextQ(prompt).then(resp => {\n      let question = resp.body.generations[0].text.replace(\"Malcolm:\", \"\");\n      //console.log(resp)\n      //console.log(\"okay2\")\n      prompt = prompt + question;\n      if (question.slice(-1) !== \"\\n\") {\n        prompt = prompt + \"\\n\";\n      }\n      prompt = prompt + \"Malcolm:\";\n      //console.log(prompt)\n      //console.log(\"okay3\")\n      CURR_Q = question;\n      setQuestion(question);\n    });\n  };\n  const reset = () => {\n    timerreset(timerstart + 1);\n  };\n  const both = () => {\n    reset();\n    next_question();\n  };\n  useEffect(() => {}, []);\n  useEffect(() => {}, [timerstart]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"headline\",\n        children: \"Question: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainButton, {\n      className: \"title-1\",\n      onClick: () => next_question(),\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CircularButton, {\n      className: \"circular-button-1\",\n      onClick: () => reset(),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecButton, {\n      className: \"rec-button-1\",\n      children: \"Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"http://foolbecool.me/feedbackreport.github.io/\",\n      children: /*#__PURE__*/_jsxDEV(CircularButton, {\n        className: \"circular-button-3\",\n        onClick: () => reset(),\n        children: \"End\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedbackTitle\",\n        children: \"Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionScreen, \"VI97sr39qE4N1Zc4fI+7a8remzo=\");\n_c = QuestionScreen;\nexport default QuestionScreen;\nvar _c;\n$RefreshReg$(_c, \"QuestionScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MainButton","Timer","CircularButton","RecButton","ScoreCard","Transcribed","jsxDEV","_jsxDEV","prompt","TOPIC","CURR_Q","QuestionScreen","props","_s","title","first_question","question","setQuestion","questions","setQuestions","timerstart","timerreset","cohere","require","init","initialText","buttonText","setButtonText","getNextQ","response","generate","model","maxTokens","temperature","stopSequences","returnLikelihoods","console","log","generations","text","next_question","question_p","then","resp","body","replace","slice","reset","both","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","_c","$RefreshReg$"],"sources":["D:/projects/InterviewCoachWeb/src/views/QuestionScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport MainButton from \"../components/Button/Button\";\r\nimport Timer from \"../components/Timer/Timer\";\r\nimport CircularButton from \"../components/CircularButton/CircularButton\";\r\nimport RecButton from \"../components/RecButton/RecButton\";\r\nimport ScoreCard from \"../components/ScoreCard/ScoreCard\";\r\nimport { Transcribed } from \"../components/RecButton/RecButton\";\r\nimport \"./QuestionScreen.css\";\r\nvar prompt = `Eric is an interviewer asking questions to a interview candidate. Eric usually asks questions that build upon the last response that the candidate gave, but can also change the topic and ask a more general question. Questions should be short, well-phrased, and use key information from the candidates last response. \r\nProvide interview questions to the candidate.\r\nThe candidate is Grant.\r\nEric: What job title are you applying for?\r\nGrant: Software Engineer \r\nEric: What are your thoughts on the role of testing in software engineering? \r\nGrant: I think a comprehensive testing suite is an important part of any project. In my past internship at Amazon I wrote a suite of automated tests for their home assistant devices.\r\nEric: What framework did you use to create automated tests? Was it difficult to le arn?\r\nGrant: I used the Robot framework in Python. It wasn't too difficult to learn, since my mentor was able to guide me through it.\r\nEric: Great, can you tell me more about what you were writing the tests for?\r\nThe candidate is William.\r\nEric: What job title are you applying for?\r\nWilliam: Machine Learning Engineer \r\nEric: What is overfitting? How can you prevent it? \r\nWilliam: Overfitting is when your model finds spurious correlations in your training dataset that lead to poor generalization and poor accuracy in the testing dataset.\r\nEric: Name a time that you encountered overfitting and overcame it.\r\nWilliam: I recently had difficulty with overfitting when doing image classification. I was able to prevent it through strong regularization and data augmentation.\r\nEric: Why does data augmentation help with overfitting?\r\nWilliam: It can help the model rely on more general features which remain under some set of transformations, while spurious features are destroyed under certain transformations.\r\nEric: What is the difference between supervised and unsupervised learning?\r\nThe candidate is Malcolm.\r\nEric: What job title are you applying for?\r\nMalcolm:`;\r\n\r\nexport var TOPIC = \"\";\r\nexport var CURR_Q = \"\";\r\n\r\nfunction QuestionScreen(props) {\r\n  const { title } = props;\r\n  const first_question = \"What job title are you applying for?\";\r\n  const [question, setQuestion] = useState(first_question);\r\n  const [questions, setQuestions] = useState([first_question]);\r\n  const [timerstart, timerreset] = useState([1]);\r\n\r\n  const cohere = require(\"cohere-ai\");\r\n  cohere.init(\"jcDwCna5a0Lcq21ccTNNFe86J2LdYUx0AQQqJlBs\");\r\n\r\n  const initialText = \"Waiting for input...\";\r\n  const [buttonText, setButtonText] = useState(initialText);\r\n\r\n  // function handleClick() {\r\n  //   setButtonText(Transcribed.text);\r\n\r\n  //   setTimeout(() => {\r\n  //     setButtonText(initialText);\r\n  //   }, 5000); // 👈️ change text back after 1 second\r\n  // }\r\n\r\n  async function getNextQ(prompt) {\r\n    // const response_p = await cohere.generate('large', {\r\n    //     prompt: prompt,\r\n    //     max_tokens: 120,\r\n    //     temperature: 0.6,\r\n    //     p: 0.5,\r\n    //     stop_sequences: ['Malcolm:']\r\n    // })\r\n    const response = await cohere.generate({\r\n      model: \"command\",\r\n      prompt,\r\n      maxTokens: 300,\r\n      temperature: 0.9,\r\n      stopSequences: [],\r\n      returnLikelihoods: \"NONE\",\r\n    });\r\n    console.log(`Prediction: ${response.generations[0].text}`);\r\n\r\n    return response.generations[0].text;\r\n  }\r\n\r\n  const next_question = () => {\r\n    setButtonText(Transcribed.text);\r\n    //console.log(prompt, Transcribed)\r\n    //console.log(\"okay\")\r\n    prompt = prompt + Transcribed.text;\r\n    if (TOPIC == \"\") {\r\n      TOPIC = Transcribed.text;\r\n    }\r\n\r\n    prompt = prompt + \"\\n\";\r\n    prompt = prompt + \"Eric:\";\r\n    let question_p = getNextQ(prompt).then((resp) => {\r\n      let question = resp.body.generations[0].text.replace(\"Malcolm:\", \"\");\r\n      //console.log(resp)\r\n      //console.log(\"okay2\")\r\n      prompt = prompt + question;\r\n      if (question.slice(-1) !== \"\\n\") {\r\n        prompt = prompt + \"\\n\";\r\n      }\r\n      prompt = prompt + \"Malcolm:\";\r\n      //console.log(prompt)\r\n      //console.log(\"okay3\")\r\n      CURR_Q = question;\r\n      setQuestion(question);\r\n    });\r\n  };\r\n\r\n  const reset = () => {\r\n    timerreset(timerstart + 1);\r\n  };\r\n\r\n  const both = () => {\r\n    reset();\r\n    next_question();\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  useEffect(() => {}, [timerstart]);\r\n\r\n  return (\r\n    <div className=\"question-screen\">\r\n      <div>\r\n        <h1 className=\"headline\">Question: </h1>\r\n      </div>\r\n      <div>\r\n        <h1 className=\"title\">{question}</h1>\r\n      </div>\r\n\r\n      <div className=\"answer\">\r\n        <p>{buttonText}</p>\r\n      </div>\r\n\r\n      {/* <Timer initialSeconds={60} index={timerstart} /> */}\r\n      <MainButton className=\"title-1\" onClick={() => next_question()}>\r\n        Next Question\r\n      </MainButton>\r\n      <CircularButton className=\"circular-button-1\" onClick={() => reset()}>\r\n        Reset\r\n      </CircularButton>\r\n      <RecButton className=\"rec-button-1\">Record</RecButton>\r\n      <a href=\"http://foolbecool.me/feedbackreport.github.io/\">\r\n        <CircularButton className=\"circular-button-3\" onClick={() => reset()}>\r\n          End\r\n        </CircularButton>\r\n      </a>\r\n\r\n      {/* <ProgressBar bgcolsr=\"red\" scoreName=\"idk\" completed={65}/> */}\r\n      <div>\r\n        <br></br>\r\n        <p className=\"feedbackTitle\">Feedback</p>\r\n      </div>\r\n      {<ScoreCard />}\r\n      {/* <CircularButton className=\"circular-button-3\" onClick={() => next_question()}>End</CircularButton> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}