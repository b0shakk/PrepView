{"ast":null,"code":"\"use strict\";\n\n/**\n * This file was auto-generated by Fern from our API Definition.\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CohereClient = void 0;\nconst environments = __importStar(require(\"./environments\"));\nconst core = __importStar(require(\"./core\"));\nconst Cohere = __importStar(require(\"./api\"));\nconst serializers = __importStar(require(\"./serialization\"));\nconst url_join_1 = __importDefault(require(\"url-join\"));\nconst errors = __importStar(require(\"./errors\"));\nclass CohereClient {\n  constructor(_options) {\n    this._options = _options;\n  }\n  /**\n   * The `chat` endpoint allows users to have conversations with a Large Language Model (LLM) from Cohere. Users can send messages as part of a persisted conversation using the `conversation_id` parameter, or they can pass in their own conversation history using the `chat_history` parameter.\n   * The endpoint features additional parameters such as `connectors` and `documents` that enable conversations enriched by external knowledge. We call this \"Retrieval Augmented Generation\", or \"RAG\".\n   * If you have questions or require support, we're here to help! Reach out to your Cohere partner to enable access to this API.\n   *\n   */\n  chatStream(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const _response = yield core.streamingFetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/chat\"),\n        method: \"POST\",\n        headers: {\n          Authorization: yield this._getAuthorizationHeader(),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"cohere-ai\",\n          \"X-Fern-SDK-Version\": \"7.4.3\"\n        },\n        body: Object.assign(Object.assign({}, yield serializers.ChatStreamRequest.jsonOrThrow(request, {\n          unrecognizedObjectKeys: \"strip\"\n        })), {\n          stream: true\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000\n      });\n      return new core.Stream({\n        stream: _response.data,\n        terminator: \"\\n\",\n        parse: data => __awaiter(this, void 0, void 0, function* () {\n          return yield serializers.StreamedChatResponse.parseOrThrow(data, {\n            unrecognizedObjectKeys: \"passthrough\",\n            allowUnrecognizedUnionMembers: true,\n            allowUnrecognizedEnumValues: true,\n            skipValidation: true,\n            breadcrumbsPrefix: [\"response\"]\n          });\n        })\n      });\n    });\n  }\n  /**\n   * The `chat` endpoint allows users to have conversations with a Large Language Model (LLM) from Cohere. Users can send messages as part of a persisted conversation using the `conversation_id` parameter, or they can pass in their own conversation history using the `chat_history` parameter.\n   * The endpoint features additional parameters such as `connectors` and `documents` that enable conversations enriched by external knowledge. We call this \"Retrieval Augmented Generation\", or \"RAG\".\n   * If you have questions or require support, we're here to help! Reach out to your Cohere partner to enable access to this API.\n   *\n   */\n  chat(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/chat\"),\n        method: \"POST\",\n        headers: {\n          Authorization: yield this._getAuthorizationHeader(),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"cohere-ai\",\n          \"X-Fern-SDK-Version\": \"7.4.3\"\n        },\n        contentType: \"application/json\",\n        body: Object.assign(Object.assign({}, yield serializers.ChatRequest.jsonOrThrow(request, {\n          unrecognizedObjectKeys: \"strip\"\n        })), {\n          stream: false\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.NonStreamedChatResponse.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          skipValidation: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        throw new errors.CohereError({\n          statusCode: _response.error.statusCode,\n          body: _response.error.body\n        });\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.CohereError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.CohereTimeoutError();\n        case \"unknown\":\n          throw new errors.CohereError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * This endpoint generates realistic text conditioned on a given input.\n   * @throws {@link Cohere.BadRequestError}\n   * @throws {@link Cohere.InternalServerError}\n   */\n  generate(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/generate\"),\n        method: \"POST\",\n        headers: {\n          Authorization: yield this._getAuthorizationHeader(),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"cohere-ai\",\n          \"X-Fern-SDK-Version\": \"7.4.3\"\n        },\n        contentType: \"application/json\",\n        body: yield serializers.GenerateRequest.jsonOrThrow(request, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.Generation.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          skipValidation: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 400:\n            throw new Cohere.BadRequestError(_response.error.body);\n          case 500:\n            throw new Cohere.InternalServerError(_response.error.body);\n          default:\n            throw new errors.CohereError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.CohereError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.CohereTimeoutError();\n        case \"unknown\":\n          throw new errors.CohereError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * This endpoint returns text embeddings. An embedding is a list of floating point numbers that captures semantic information about the text that it represents.\n   *\n   * Embeddings can be used to create text classifiers as well as empower semantic search. To learn more about embeddings, see the embedding page.\n   *\n   * If you want to learn more how to use the embedding model, have a look at the [Semantic Search Guide](/docs/semantic-search).\n   * @throws {@link Cohere.BadRequestError}\n   * @throws {@link Cohere.InternalServerError}\n   */\n  embed(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/embed\"),\n        method: \"POST\",\n        headers: {\n          Authorization: yield this._getAuthorizationHeader(),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"cohere-ai\",\n          \"X-Fern-SDK-Version\": \"7.4.3\"\n        },\n        contentType: \"application/json\",\n        body: yield serializers.EmbedRequest.jsonOrThrow(request, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.EmbedResponse.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          skipValidation: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 400:\n            throw new Cohere.BadRequestError(_response.error.body);\n          case 500:\n            throw new Cohere.InternalServerError(_response.error.body);\n          default:\n            throw new errors.CohereError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.CohereError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.CohereTimeoutError();\n        case \"unknown\":\n          throw new errors.CohereError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * This endpoint takes in a query and a list of texts and produces an ordered array with each text assigned a relevance score.\n   */\n  rerank(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/rerank\"),\n        method: \"POST\",\n        headers: {\n          Authorization: yield this._getAuthorizationHeader(),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"cohere-ai\",\n          \"X-Fern-SDK-Version\": \"7.4.3\"\n        },\n        contentType: \"application/json\",\n        body: yield serializers.RerankRequest.jsonOrThrow(request, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.RerankResponse.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          skipValidation: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        throw new errors.CohereError({\n          statusCode: _response.error.statusCode,\n          body: _response.error.body\n        });\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.CohereError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.CohereTimeoutError();\n        case \"unknown\":\n          throw new errors.CohereError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * This endpoint makes a prediction about which label fits the specified text inputs best. To make a prediction, Classify uses the provided `examples` of text + label pairs as a reference.\n   * Note: [Custom Models](/training-representation-models) trained on classification examples don't require the `examples` parameter to be passed in explicitly.\n   * @throws {@link Cohere.BadRequestError}\n   * @throws {@link Cohere.InternalServerError}\n   */\n  classify(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/classify\"),\n        method: \"POST\",\n        headers: {\n          Authorization: yield this._getAuthorizationHeader(),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"cohere-ai\",\n          \"X-Fern-SDK-Version\": \"7.4.3\"\n        },\n        contentType: \"application/json\",\n        body: yield serializers.ClassifyRequest.jsonOrThrow(request, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.ClassifyResponse.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          skipValidation: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 400:\n            throw new Cohere.BadRequestError(_response.error.body);\n          case 500:\n            throw new Cohere.InternalServerError(_response.error.body);\n          default:\n            throw new errors.CohereError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.CohereError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.CohereTimeoutError();\n        case \"unknown\":\n          throw new errors.CohereError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * This endpoint identifies which language each of the provided texts is written in.\n   */\n  detectLanguage(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/detect-language\"),\n        method: \"POST\",\n        headers: {\n          Authorization: yield this._getAuthorizationHeader(),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"cohere-ai\",\n          \"X-Fern-SDK-Version\": \"7.4.3\"\n        },\n        contentType: \"application/json\",\n        body: yield serializers.DetectLanguageRequest.jsonOrThrow(request, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.DetectLanguageResponse.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          skipValidation: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        throw new errors.CohereError({\n          statusCode: _response.error.statusCode,\n          body: _response.error.body\n        });\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.CohereError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.CohereTimeoutError();\n        case \"unknown\":\n          throw new errors.CohereError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * This endpoint generates a summary in English for a given text.\n   */\n  summarize(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/summarize\"),\n        method: \"POST\",\n        headers: {\n          Authorization: yield this._getAuthorizationHeader(),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"cohere-ai\",\n          \"X-Fern-SDK-Version\": \"7.4.3\"\n        },\n        contentType: \"application/json\",\n        body: yield serializers.SummarizeRequest.jsonOrThrow(request, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.SummarizeResponse.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          skipValidation: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        throw new errors.CohereError({\n          statusCode: _response.error.statusCode,\n          body: _response.error.body\n        });\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.CohereError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.CohereTimeoutError();\n        case \"unknown\":\n          throw new errors.CohereError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * This endpoint splits input text into smaller units called tokens using byte-pair encoding (BPE). To learn more about tokenization and byte pair encoding, see the tokens page.\n   * @throws {@link Cohere.BadRequestError}\n   * @throws {@link Cohere.InternalServerError}\n   */\n  tokenize(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/tokenize\"),\n        method: \"POST\",\n        headers: {\n          Authorization: yield this._getAuthorizationHeader(),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"cohere-ai\",\n          \"X-Fern-SDK-Version\": \"7.4.3\"\n        },\n        contentType: \"application/json\",\n        body: yield serializers.TokenizeRequest.jsonOrThrow(request, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.TokenizeResponse.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          skipValidation: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 400:\n            throw new Cohere.BadRequestError(_response.error.body);\n          case 500:\n            throw new Cohere.InternalServerError(_response.error.body);\n          default:\n            throw new errors.CohereError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.CohereError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.CohereTimeoutError();\n        case \"unknown\":\n          throw new errors.CohereError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * This endpoint takes tokens using byte-pair encoding and returns their text representation. To learn more about tokenization and byte pair encoding, see the tokens page.\n   */\n  detokenize(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/detokenize\"),\n        method: \"POST\",\n        headers: {\n          Authorization: yield this._getAuthorizationHeader(),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"cohere-ai\",\n          \"X-Fern-SDK-Version\": \"7.4.3\"\n        },\n        contentType: \"application/json\",\n        body: yield serializers.DetokenizeRequest.jsonOrThrow(request, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.DetokenizeResponse.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          skipValidation: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        throw new errors.CohereError({\n          statusCode: _response.error.statusCode,\n          body: _response.error.body\n        });\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.CohereError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.CohereTimeoutError();\n        case \"unknown\":\n          throw new errors.CohereError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  _getAuthorizationHeader() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return `Bearer ${yield core.Supplier.get(this._options.token)}`;\n    });\n  }\n}\nexports.CohereClient = CohereClient;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","__importDefault","exports","CohereClient","environments","require","core","Cohere","serializers","url_join_1","errors","constructor","_options","chatStream","request","requestOptions","_a","_response","streamingFetcher","url","default","Supplier","environment","CohereEnvironment","Production","method","headers","Authorization","_getAuthorizationHeader","body","assign","ChatStreamRequest","jsonOrThrow","unrecognizedObjectKeys","stream","timeoutMs","timeoutInSeconds","Stream","data","terminator","parse","StreamedChatResponse","parseOrThrow","allowUnrecognizedUnionMembers","allowUnrecognizedEnumValues","skipValidation","breadcrumbsPrefix","chat","fetcher","contentType","ChatRequest","maxRetries","ok","NonStreamedChatResponse","error","reason","CohereError","statusCode","rawBody","CohereTimeoutError","message","errorMessage","generate","GenerateRequest","Generation","BadRequestError","InternalServerError","embed","EmbedRequest","EmbedResponse","rerank","RerankRequest","RerankResponse","classify","ClassifyRequest","ClassifyResponse","detectLanguage","DetectLanguageRequest","DetectLanguageResponse","summarize","SummarizeRequest","SummarizeResponse","tokenize","TokenizeRequest","TokenizeResponse","detokenize","DetokenizeRequest","DetokenizeResponse","token"],"sources":["D:/projects/InterviewCoachWeb/node_modules/cohere-ai/Client.js"],"sourcesContent":["\"use strict\";\n/**\n * This file was auto-generated by Fern from our API Definition.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CohereClient = void 0;\nconst environments = __importStar(require(\"./environments\"));\nconst core = __importStar(require(\"./core\"));\nconst Cohere = __importStar(require(\"./api\"));\nconst serializers = __importStar(require(\"./serialization\"));\nconst url_join_1 = __importDefault(require(\"url-join\"));\nconst errors = __importStar(require(\"./errors\"));\nclass CohereClient {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * The `chat` endpoint allows users to have conversations with a Large Language Model (LLM) from Cohere. Users can send messages as part of a persisted conversation using the `conversation_id` parameter, or they can pass in their own conversation history using the `chat_history` parameter.\n     * The endpoint features additional parameters such as `connectors` and `documents` that enable conversations enriched by external knowledge. We call this \"Retrieval Augmented Generation\", or \"RAG\".\n     * If you have questions or require support, we're here to help! Reach out to your Cohere partner to enable access to this API.\n     *\n     */\n    chatStream(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const _response = yield core.streamingFetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/chat\"),\n                method: \"POST\",\n                headers: {\n                    Authorization: yield this._getAuthorizationHeader(),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"cohere-ai\",\n                    \"X-Fern-SDK-Version\": \"7.4.3\",\n                },\n                body: Object.assign(Object.assign({}, (yield serializers.ChatStreamRequest.jsonOrThrow(request, { unrecognizedObjectKeys: \"strip\" }))), { stream: true }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n            });\n            return new core.Stream({\n                stream: _response.data,\n                terminator: \"\\n\",\n                parse: (data) => __awaiter(this, void 0, void 0, function* () {\n                    return yield serializers.StreamedChatResponse.parseOrThrow(data, {\n                        unrecognizedObjectKeys: \"passthrough\",\n                        allowUnrecognizedUnionMembers: true,\n                        allowUnrecognizedEnumValues: true,\n                        skipValidation: true,\n                        breadcrumbsPrefix: [\"response\"],\n                    });\n                }),\n            });\n        });\n    }\n    /**\n     * The `chat` endpoint allows users to have conversations with a Large Language Model (LLM) from Cohere. Users can send messages as part of a persisted conversation using the `conversation_id` parameter, or they can pass in their own conversation history using the `chat_history` parameter.\n     * The endpoint features additional parameters such as `connectors` and `documents` that enable conversations enriched by external knowledge. We call this \"Retrieval Augmented Generation\", or \"RAG\".\n     * If you have questions or require support, we're here to help! Reach out to your Cohere partner to enable access to this API.\n     *\n     */\n    chat(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/chat\"),\n                method: \"POST\",\n                headers: {\n                    Authorization: yield this._getAuthorizationHeader(),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"cohere-ai\",\n                    \"X-Fern-SDK-Version\": \"7.4.3\",\n                },\n                contentType: \"application/json\",\n                body: Object.assign(Object.assign({}, (yield serializers.ChatRequest.jsonOrThrow(request, { unrecognizedObjectKeys: \"strip\" }))), { stream: false }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.NonStreamedChatResponse.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    skipValidation: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                throw new errors.CohereError({\n                    statusCode: _response.error.statusCode,\n                    body: _response.error.body,\n                });\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.CohereError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.CohereTimeoutError();\n                case \"unknown\":\n                    throw new errors.CohereError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * This endpoint generates realistic text conditioned on a given input.\n     * @throws {@link Cohere.BadRequestError}\n     * @throws {@link Cohere.InternalServerError}\n     */\n    generate(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/generate\"),\n                method: \"POST\",\n                headers: {\n                    Authorization: yield this._getAuthorizationHeader(),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"cohere-ai\",\n                    \"X-Fern-SDK-Version\": \"7.4.3\",\n                },\n                contentType: \"application/json\",\n                body: yield serializers.GenerateRequest.jsonOrThrow(request, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.Generation.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    skipValidation: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 400:\n                        throw new Cohere.BadRequestError(_response.error.body);\n                    case 500:\n                        throw new Cohere.InternalServerError(_response.error.body);\n                    default:\n                        throw new errors.CohereError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.CohereError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.CohereTimeoutError();\n                case \"unknown\":\n                    throw new errors.CohereError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * This endpoint returns text embeddings. An embedding is a list of floating point numbers that captures semantic information about the text that it represents.\n     *\n     * Embeddings can be used to create text classifiers as well as empower semantic search. To learn more about embeddings, see the embedding page.\n     *\n     * If you want to learn more how to use the embedding model, have a look at the [Semantic Search Guide](/docs/semantic-search).\n     * @throws {@link Cohere.BadRequestError}\n     * @throws {@link Cohere.InternalServerError}\n     */\n    embed(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/embed\"),\n                method: \"POST\",\n                headers: {\n                    Authorization: yield this._getAuthorizationHeader(),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"cohere-ai\",\n                    \"X-Fern-SDK-Version\": \"7.4.3\",\n                },\n                contentType: \"application/json\",\n                body: yield serializers.EmbedRequest.jsonOrThrow(request, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.EmbedResponse.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    skipValidation: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 400:\n                        throw new Cohere.BadRequestError(_response.error.body);\n                    case 500:\n                        throw new Cohere.InternalServerError(_response.error.body);\n                    default:\n                        throw new errors.CohereError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.CohereError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.CohereTimeoutError();\n                case \"unknown\":\n                    throw new errors.CohereError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * This endpoint takes in a query and a list of texts and produces an ordered array with each text assigned a relevance score.\n     */\n    rerank(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/rerank\"),\n                method: \"POST\",\n                headers: {\n                    Authorization: yield this._getAuthorizationHeader(),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"cohere-ai\",\n                    \"X-Fern-SDK-Version\": \"7.4.3\",\n                },\n                contentType: \"application/json\",\n                body: yield serializers.RerankRequest.jsonOrThrow(request, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.RerankResponse.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    skipValidation: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                throw new errors.CohereError({\n                    statusCode: _response.error.statusCode,\n                    body: _response.error.body,\n                });\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.CohereError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.CohereTimeoutError();\n                case \"unknown\":\n                    throw new errors.CohereError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * This endpoint makes a prediction about which label fits the specified text inputs best. To make a prediction, Classify uses the provided `examples` of text + label pairs as a reference.\n     * Note: [Custom Models](/training-representation-models) trained on classification examples don't require the `examples` parameter to be passed in explicitly.\n     * @throws {@link Cohere.BadRequestError}\n     * @throws {@link Cohere.InternalServerError}\n     */\n    classify(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/classify\"),\n                method: \"POST\",\n                headers: {\n                    Authorization: yield this._getAuthorizationHeader(),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"cohere-ai\",\n                    \"X-Fern-SDK-Version\": \"7.4.3\",\n                },\n                contentType: \"application/json\",\n                body: yield serializers.ClassifyRequest.jsonOrThrow(request, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.ClassifyResponse.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    skipValidation: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 400:\n                        throw new Cohere.BadRequestError(_response.error.body);\n                    case 500:\n                        throw new Cohere.InternalServerError(_response.error.body);\n                    default:\n                        throw new errors.CohereError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.CohereError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.CohereTimeoutError();\n                case \"unknown\":\n                    throw new errors.CohereError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * This endpoint identifies which language each of the provided texts is written in.\n     */\n    detectLanguage(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/detect-language\"),\n                method: \"POST\",\n                headers: {\n                    Authorization: yield this._getAuthorizationHeader(),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"cohere-ai\",\n                    \"X-Fern-SDK-Version\": \"7.4.3\",\n                },\n                contentType: \"application/json\",\n                body: yield serializers.DetectLanguageRequest.jsonOrThrow(request, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.DetectLanguageResponse.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    skipValidation: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                throw new errors.CohereError({\n                    statusCode: _response.error.statusCode,\n                    body: _response.error.body,\n                });\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.CohereError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.CohereTimeoutError();\n                case \"unknown\":\n                    throw new errors.CohereError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * This endpoint generates a summary in English for a given text.\n     */\n    summarize(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/summarize\"),\n                method: \"POST\",\n                headers: {\n                    Authorization: yield this._getAuthorizationHeader(),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"cohere-ai\",\n                    \"X-Fern-SDK-Version\": \"7.4.3\",\n                },\n                contentType: \"application/json\",\n                body: yield serializers.SummarizeRequest.jsonOrThrow(request, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.SummarizeResponse.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    skipValidation: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                throw new errors.CohereError({\n                    statusCode: _response.error.statusCode,\n                    body: _response.error.body,\n                });\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.CohereError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.CohereTimeoutError();\n                case \"unknown\":\n                    throw new errors.CohereError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * This endpoint splits input text into smaller units called tokens using byte-pair encoding (BPE). To learn more about tokenization and byte pair encoding, see the tokens page.\n     * @throws {@link Cohere.BadRequestError}\n     * @throws {@link Cohere.InternalServerError}\n     */\n    tokenize(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/tokenize\"),\n                method: \"POST\",\n                headers: {\n                    Authorization: yield this._getAuthorizationHeader(),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"cohere-ai\",\n                    \"X-Fern-SDK-Version\": \"7.4.3\",\n                },\n                contentType: \"application/json\",\n                body: yield serializers.TokenizeRequest.jsonOrThrow(request, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.TokenizeResponse.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    skipValidation: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 400:\n                        throw new Cohere.BadRequestError(_response.error.body);\n                    case 500:\n                        throw new Cohere.InternalServerError(_response.error.body);\n                    default:\n                        throw new errors.CohereError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.CohereError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.CohereTimeoutError();\n                case \"unknown\":\n                    throw new errors.CohereError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * This endpoint takes tokens using byte-pair encoding and returns their text representation. To learn more about tokenization and byte pair encoding, see the tokens page.\n     */\n    detokenize(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.CohereEnvironment.Production, \"v1/detokenize\"),\n                method: \"POST\",\n                headers: {\n                    Authorization: yield this._getAuthorizationHeader(),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"cohere-ai\",\n                    \"X-Fern-SDK-Version\": \"7.4.3\",\n                },\n                contentType: \"application/json\",\n                body: yield serializers.DetokenizeRequest.jsonOrThrow(request, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.DetokenizeResponse.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    skipValidation: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                throw new errors.CohereError({\n                    statusCode: _response.error.statusCode,\n                    body: _response.error.body,\n                });\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.CohereError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.CohereTimeoutError();\n                case \"unknown\":\n                    throw new errors.CohereError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    _getAuthorizationHeader() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return `Bearer ${yield core.Supplier.get(this._options.token)}`;\n        });\n    }\n}\nexports.CohereClient = CohereClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}